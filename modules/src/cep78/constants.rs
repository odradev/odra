pub const PREFIX_ACCESS_KEY_NAME: &str = "cep78_contract_package_access";
pub const PREFIX_CEP78: &str = "cep78";
pub const PREFIX_CONTRACT_NAME: &str = "cep78_contract_hash";
pub const PREFIX_CONTRACT_VERSION: &str = "cep78_contract_version";
pub const PREFIX_HASH_KEY_NAME: &str = "cep78_contract_package";
pub const PREFIX_PAGE_DICTIONARY: &str = "page";

pub const ARG_ACCESS_KEY_NAME_1_0_0: &str = "access_key_name";
pub const ARG_ACL_PACKAGE_MODE: &str = "acl_package_mode";
pub const ARG_ACL_WHITELIST: &str = "acl_whitelist";
pub const ARG_ADDITIONAL_REQUIRED_METADATA: &str = "additional_required_metadata";
pub const ARG_ALLOW_MINTING: &str = "allow_minting";
pub const ARG_APPROVE_ALL: &str = "approve_all";
pub const ARG_BURN_MODE: &str = "burn_mode";
pub const ARG_COLLECTION_NAME: &str = "collection_name";
pub const ARG_COLLECTION_SYMBOL: &str = "collection_symbol";
pub const ARG_CONTRACT_WHITELIST: &str = "contract_whitelist";
pub const ARG_EVENTS_MODE: &str = "events_mode";
pub const ARG_HASH_KEY_NAME_1_0_0: &str = "hash_key_name";
pub const ARG_HOLDER_MODE: &str = "holder_mode";
pub const ARG_IDENTIFIER_MODE: &str = "identifier_mode";
pub const ARG_JSON_SCHEMA: &str = "json_schema";
pub const ARG_METADATA_MUTABILITY: &str = "metadata_mutability";
pub const ARG_MINTING_MODE: &str = "minting_mode";
pub const ARG_NAMED_KEY_CONVENTION: &str = "named_key_convention";
pub const ARG_NFT_KIND: &str = "nft_kind";
pub const ARG_NFT_METADATA_KIND: &str = "nft_metadata_kind";
pub const ARG_NFT_PACKAGE_KEY: &str = "cep78_package_key";
pub const ARG_OPTIONAL_METADATA: &str = "optional_metadata";
pub const ARG_OPERATOR: &str = "operator";
pub const ARG_OPERATOR_BURN_MODE: &str = "operator_burn_mode";
pub const ARG_OWNERSHIP_MODE: &str = "ownership_mode";
pub const ARG_OWNER_LOOKUP_MODE: &str = "owner_reverse_lookup_mode";
pub const ARG_PACKAGE_OPERATOR_MODE: &str = "package_operator_mode";
pub const ARG_RECEIPT_NAME: &str = "receipt_name";
pub const ARG_SOURCE_KEY: &str = "source_key";
pub const ARG_SPENDER: &str = "spender";
pub const ARG_TARGET_KEY: &str = "target_key";
pub const ARG_TOKEN_HASH: &str = "token_hash";
pub const ARG_TOKEN_ID: &str = "token_id";
pub const ARG_TOKEN_META_DATA: &str = "token_meta_data";
pub const ARG_TOKEN_OWNER: &str = "token_owner";
pub const ARG_TOTAL_TOKEN_SUPPLY: &str = "total_token_supply";
pub const ARG_TRANSFER_FILTER_CONTRACT: &str = "transfer_filter_contract";
pub const ARG_WHITELIST_MODE: &str = "whitelist_mode";

pub const ENTRY_POINT_APPROVE: &str = "approve";
pub const ENTRY_POINT_BALANCE_OF: &str = "balance_of";
pub const ENTRY_POINT_BURN: &str = "burn";
pub const ENTRY_POINT_GET_APPROVED: &str = "get_approved";
pub const ENTRY_POINT_INIT: &str = "init";
pub const ENTRY_POINT_IS_APPROVED_FOR_ALL: &str = "is_approved_for_all";
pub const ENTRY_POINT_METADATA: &str = "metadata";
pub const ENTRY_POINT_MIGRATE: &str = "migrate";
pub const ENTRY_POINT_MINT: &str = "mint";
pub const ENTRY_POINT_OWNER_OF: &str = "owner_of";
pub const ENTRY_POINT_REVOKE: &str = "revoke";
pub const ENTRY_POINT_REGISTER_OWNER: &str = "register_owner";
pub const ENTRY_POINT_SET_APPROVALL_FOR_ALL: &str = "set_approval_for_all";
pub const ENTRY_POINT_SET_TOKEN_METADATA: &str = "set_token_metadata";
pub const ENTRY_POINT_SET_VARIABLES: &str = "set_variables";
pub const ENTRY_POINT_TRANSFER: &str = "transfer";
pub const ENTRY_POINT_UPDATED_RECEIPTS: &str = "updated_receipts";

pub const ACL_PACKAGE_MODE: &str = "acl_package_mode";
pub const ACL_WHITELIST: &str = "acl_whitelist";
pub const ALLOW_MINTING: &str = "allow_minting";
pub const APPROVED: &str = "approved";
pub const BURN_MODE: &str = "burn_mode";
pub const BURNT_TOKENS: &str = "burnt_tokens";
pub const COLLECTION_NAME: &str = "collection_name";
pub const COLLECTION_SYMBOL: &str = "collection_symbol";
pub const CONTRACT_WHITELIST: &str = "contract_whitelist";
pub const EVENT_TYPE: &str = "event_type";
pub const EVENTS: &str = "events";
pub const EVENTS_MODE: &str = "events_mode";
pub const HASH_BY_INDEX: &str = "hash_by_index";
pub const HOLDER_MODE: &str = "holder_mode";
pub const IDENTIFIER_MODE: &str = "identifier_mode";
pub const INDEX_BY_HASH: &str = "index_by_hash";
pub const INSTALLER: &str = "installer";
pub const JSON_SCHEMA: &str = "json_schema";
pub const METADATA_CEP78: &str = "metadata_cep78";
pub const METADATA_CUSTOM_VALIDATED: &str = "metadata_custom_validated";
pub const METADATA_MUTABILITY: &str = "metadata_mutability";
pub const METADATA_NFT721: &str = "metadata_nft721";
pub const METADATA_RAW: &str = "metadata_raw";
pub const MIGRATION_FLAG: &str = "migration_flag";
pub const MINTING_MODE: &str = "minting_mode";
pub const NFT_KIND: &str = "nft_kind";
pub const NFT_METADATA_KIND: &str = "nft_metadata_kind";
pub const NFT_METADATA_KINDS: &str = "nft_metadata_kinds";
pub const NUMBER_OF_MINTED_TOKENS: &str = "number_of_minted_tokens";
pub const OPERATOR: &str = "operator";
pub const OPERATORS: &str = "operators";
pub const OPERATOR_BURN_MODE: &str = "operator_burn_mode";
pub const OWNED_TOKENS: &str = "owned_tokens";
pub const OWNER: &str = "owner";
pub const BURNER: &str = "burner";
pub const OWNERSHIP_MODE: &str = "ownership_mode";
pub const PACKAGE_OPERATOR_MODE: &str = "package_operator_mode";
pub const PAGE_LIMIT: &str = "page_limit";
pub const PAGE_TABLE: &str = "page_table";
pub const RECEIPT_NAME: &str = "receipt_name";
pub const RECIPIENT: &str = "recipient";
pub const REPORTING_MODE: &str = "reporting_mode";
pub const RLO_MFLAG: &str = "rlo_mflag";
pub const SENDER: &str = "sender";
pub const SPENDER: &str = "spender";
pub const TOKEN_COUNT: &str = "balances";
pub const TOKEN_ID: &str = "token_id";
pub const TOKEN_ISSUERS: &str = "token_issuers";
pub const TOKEN_OWNERS: &str = "token_owners";
pub const TOTAL_TOKEN_SUPPLY: &str = "total_token_supply";
pub const TRANSFER_FILTER_CONTRACT: &str = "transfer_filter_contract";
pub const TRANSFER_FILTER_CONTRACT_METHOD: &str = "can_transfer";
pub const UNMATCHED_HASH_COUNT: &str = "unmatched_hash_count";
pub const WHITELIST_MODE: &str = "whitelist_mode";

// The cap on the amount of tokens within a given CEP-78 collection.
pub const MAX_TOTAL_TOKEN_SUPPLY: u64 = 1_000_000u64;

pub const ACCESS_KEY_NAME_1_0_0: &str = "nft_contract_package_access";
pub const HASH_KEY_NAME_1_0_0: &str = "nft_contract_package";
